events {}

http {
  # Rate-Limit Zone (wie gewünscht)
  limit_req_zone $binary_remote_addr zone=kibana_login:10m rate=5r/m;

  # Klarer 80-Redirect auf die Domain
  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name adlah.dev;
    return 301 https://adlah.dev$request_uri;
  }

  # EIN 443-vHost für deine Domain, mit Basic-Auth und Proxy zu Kibana
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name adlah.dev;

    ssl_certificate     /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    # Rate-Limit anwenden
    limit_req zone=kibana_login burst=10 nodelay;

    # Basic Auth global aktivieren
    auth_basic "Restricted Access";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # Health ohne Login, für HC & Debug
    location ^~ /health {
      auth_basic off;
      add_header Content-Type text/plain;
      return 200 'ok';
    }

    # Reverse Proxy auf Kibana (Containername = 'kibana')
    location / {
      proxy_pass http://kibana:5601;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # WebSocket-Unterstützung für Kibana
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }
}
