services:
  elasticsearch:
    build: ./elasticsearch
    ports: ["9200:9200"]
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    restart: unless-stopped

  kibana:
    build: ./kibana
    ports: ["5601:5601"]
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  logstash:
    build: ./logstash
    ports: ["15044:15044", "5044:5044"]
    volumes:
      - ./logstash/dist/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/dist/pipelines/:/usr/share/logstash/pipeline/
      - ./logstash/dist/certs/:/usr/share/logstash/certs/
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  rl-agent:
    build: ./rl-agent
    env_file: ./env/rl-agent.env
    volumes:
      - rl-agent-models:/app/model
      - ./secrets:/secrets:ro
      - ./cluster_kubeconfig/config_host:/app/kubeconfig_host:ro
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - KUBECONFIG=/app/kubeconfig_host
      - HONEYPOD_NS=honeypod
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    build: ./nginx
    ports: ["0.0.0.0:444:443"]
    volumes:
      - ./nginx/dist/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/htpasswd:/etc/nginx/.htpasswd:ro
      - ./nginx/certs/cert.pem:/etc/nginx/certs/cert.pem:ro
      - ./nginx/certs/key.pem:/etc/nginx/certs/key.pem:ro
    depends_on:
      - kibana
    restart: unless-stopped

volumes:
  esdata:
  rl-agent-models: